name: Build and Release WSL Fedora for DevOps

on:
  release:
    types:
      - published

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    # Grant write access to release assets
    permissions:
      contents: write

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Build Docker image
      - name: Build Docker image
        run: docker build -t wsl-fedora .

      # Step 3: Export Docker container to .tar
      - name: Export Docker container to .tar
        run: |
          docker create --name wsl_fedora_container wsl-fedora
          docker export wsl_fedora_container > wsl-fedora.tar
          docker rm wsl_fedora_container
          echo "Original tar size: $(du -sh wsl-fedora.tar)"

      # Step 4: Compress the tar file
      - name: Compress tar file
        run: |
          xz -T0 -9e wsl-fedora.tar
          echo "Compressed file size: $(du -sh wsl-fedora.tar.xz)"

      # Step 5: Calculate split size dynamically
      - name: Calculate split size
        id: calculate_split_size
        run: |
          MAX_SIZE=2000000000  # 2GB
          FILE_SIZE=$(stat --printf="%s" wsl-fedora.tar.xz)
          [[ $FILE_SIZE -le $MAX_SIZE ]] && echo "split_required=false" >> $GITHUB_ENV || {
            echo "split_required=true" >> $GITHUB_ENV
            echo "split_size=$(( ($FILE_SIZE + $MAX_SIZE - 1) / ($FILE_SIZE / $MAX_SIZE) ))" >> $GITHUB_ENV
          }

      # Step 6: Split tar file if required
      - name: Split tar file
        if: env.split_required == 'true'
        run: |
          split -b $(( ${{ env.split_size }} )) wsl-fedora.tar.xz wsl-fedora.tar.xz.part-
          echo "Split into $(ls wsl-fedora.tar.xz.part-* | wc -l) parts."

      # Step 7: Generate SHA256 hashes for verification
      - name: Generate SHA256 hashes
        run: |
          if ls wsl-fedora.tar.xz.part-* 1> /dev/null 2>&1; then
            sha256sum wsl-fedora.tar.xz.part-* > wsl-fedora.sha256
          else
            sha256sum wsl-fedora.tar.xz > wsl-fedora.sha256
          fi
          echo "SHA256 hashes generated."

      # Step 8: Upload release assets
      - name: Upload release assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ls wsl-fedora.tar.xz.part-* 1> /dev/null 2>&1; then
            echo "Uploading split files..."
            for file in wsl-fedora.tar.xz.part-*; do
              gh release upload ${{ github.event.release.tag_name }} "$file" --clobber
            done
          else
            echo "Uploading single compressed file..."
            gh release upload ${{ github.event.release.tag_name }} wsl-fedora.tar.xz --clobber
          fi
          echo "Uploading SHA256 hash file..."
          gh release upload ${{ github.event.release.tag_name }} wsl-fedora.sha256 --clobber

      # Step 9: Clean up temporary files
      - name: Cleanup temporary files
        run: rm -f wsl-fedora.tar wsl-fedora.tar.xz wsl-fedora.tar.xz.part-* wsl-fedora.sha256